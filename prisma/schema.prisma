generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  name           String?
  image          String?
  hashedPassword String?
  provider       Provider @default(Google)
  role           Role     @default(EndUser)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  streams        Stream[]
  upvotes        Upvote[]
}

model Stream {
  id            String         @id @default(uuid())
  type          StreamType
  url           String
  extractedId   String
  title         String
  smallImg      String
  bigImg        String
  addedBy       String
  active        Boolean        @default(true)
  played        Boolean        @default(false)
  playedTs      DateTime?
  createdAt     DateTime       @default(now())
  
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  upvotes       Upvote[]
  currentStream CurrentStream?
}

model CurrentStream {
  userId   String  @id
  streamId String? @unique
  stream   Stream? @relation(fields: [streamId], references: [id])
}

model Upvote {
  id       String @id @default(uuid())
  userId   String
  streamId String
  stream   Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, streamId])
}

enum Role {
  Streamer
  EndUser
}

enum Provider {
  Google
  Credentials
}

enum StreamType {
  Youtube
  Spotify
}